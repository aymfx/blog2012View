import{_ as e,c as o,o as a,N as t}from"./chunks/framework.1f285265.js";const b=JSON.parse('{"title":"css3-布局样式相关-慕课网学习","description":"","frontmatter":{"title":"css3-布局样式相关-慕课网学习","date":"2016-07-21T00:00:00.000Z","tags":["css"]},"headers":[],"relativePath":"posts/前端/以前/css3-布局样式相关-慕课网学习.md"}'),n={name:"posts/前端/以前/css3-布局样式相关-慕课网学习.md"},r=t(`<h1 id="columns" tabindex="-1">Columns <a class="header-anchor" href="#columns" aria-label="Permalink to &quot;Columns&quot;">​</a></h1><h3 id="语法" tabindex="-1">语法： <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法：&quot;">​</a></h3><pre><code>columns：&lt;column-width&gt; || &lt;column-count&gt;
</code></pre><h3 id="参数说明" tabindex="-1">参数说明 <a class="header-anchor" href="#参数说明" aria-label="Permalink to &quot;参数说明&quot;">​</a></h3><p>&lt;column-width&gt; 主要用来定义多列中每列的宽度</p><p>&lt;column-count&gt; 主要用来定义多列中的列数</p><h1 id="column-width" tabindex="-1">column-width <a class="header-anchor" href="#column-width" aria-label="Permalink to &quot;column-width&quot;">​</a></h1><p>属性值： auto 如果 column-width 设置值为 auto 或者没有显式的设置值时，元素多列的列宽将由其他属性来决定，比如前面的示例就是由列数 column-count 来决定。 length 使用固定值来设置元素列的宽度，其主要是由数值和长度单位组成，不过其值只能是正值，不能为负值。</p><h1 id="column-count" tabindex="-1">column-count <a class="header-anchor" href="#column-count" aria-label="Permalink to &quot;column-count&quot;">​</a></h1><p>属性值 auto 此值为 column-count 的默认值，表示元素只有一列，其主要依靠浏览器计算自动设置 integer 此值为正整数值，主要用来定义元素的列数，取值为大于 0 的整数，负值无效。</p><h1 id="column-gap" tabindex="-1">column-gap <a class="header-anchor" href="#column-gap" aria-label="Permalink to &quot;column-gap&quot;">​</a></h1><p>normal</p><p>默认值，默值为 1em（如果你的字号是 px，其默认值为你的 font-size 值）。</p><p>length&gt;</p><p>此值用来设置列与列之间的距离，其可以使用 px,em 单位的任何整数值，但不能是负值。</p><h1 id="column-rule" tabindex="-1">column-rule <a class="header-anchor" href="#column-rule" aria-label="Permalink to &quot;column-rule&quot;">​</a></h1><p>属性值 column-rule-width</p><p>类似于 border-width 属性，主要用来定义列边框的宽度，其默认值为“medium”，column-rule-width 属性接受任意浮点数，但不接收负值。但也像 border-width 属性一样，可以使用关键词：medium、thick 和 thin。</p><p>column-rule-style</p><p>类似于 border-style 属性，主要用来定义列边框样式，其默认值为“none”。column-rule-style 属性值与 border-style 属值相同，包括 none、hidden、dotted、dashed、solid、double、groove、ridge、inset、outset。</p><p>column-rule-color</p><p>类似于 border-color 属性，主要用来定义列边框颜色，其默认值为前景色 color 的值，使用时相当于 border-color。column-rule-color 接受所有的颜色。如果不希望显示颜色，也可以将其设置为 transparent(透明色)</p><h1 id="column-span" tabindex="-1">column-span <a class="header-anchor" href="#column-span" aria-label="Permalink to &quot;column-span&quot;">​</a></h1><p>属性值 none</p><p>此值为 column-span 的默认值，表示不跨越任何列。</p><p>all</p><p>这个值跟 none 值刚好相反，表示的是元素跨越所有列，并定位在列的Ｚ轴之上。</p><h1 id="w3c-标准盒模型" tabindex="-1">W3C 标准盒模型 <a class="header-anchor" href="#w3c-标准盒模型" aria-label="Permalink to &quot;W3C 标准盒模型&quot;">​</a></h1><h3 id="外盒尺寸计算-元素空间尺寸" tabindex="-1">外盒尺寸计算（元素空间尺寸） <a class="header-anchor" href="#外盒尺寸计算-元素空间尺寸" aria-label="Permalink to &quot;外盒尺寸计算（元素空间尺寸）&quot;">​</a></h3><p>element 空间高度＝内容高度＋内距＋边框＋外距</p><p>element 空间宽度＝内容宽度＋内距＋边框＋外距</p><h3 id="内盒尺寸计算-元素大小" tabindex="-1">内盒尺寸计算（元素大小） <a class="header-anchor" href="#内盒尺寸计算-元素大小" aria-label="Permalink to &quot;内盒尺寸计算（元素大小）&quot;">​</a></h3><p>element 高度＝内容高度＋内距＋边框（height 为内容高度）</p><p>element 宽度＝内容宽度＋内距＋边框（width 为内容宽度）</p><p>#IE 传统下盒模型（IE6 以下，不包含 IE6 版本或”QuirksMode 下 IE5.5+”）</p><h3 id="外盒尺寸计算-元素空间尺寸-1" tabindex="-1">外盒尺寸计算（元素空间尺寸） <a class="header-anchor" href="#外盒尺寸计算-元素空间尺寸-1" aria-label="Permalink to &quot;外盒尺寸计算（元素空间尺寸）&quot;">​</a></h3><p>element 空间高度＝内容高度＋外距（height 包含了元素内容宽度、边框、内距）</p><p>element 宽间宽度＝内容宽度＋外距（width 包含了元素内容宽度、边框、内距）</p><h3 id="内盒尺寸计算-元素大小-1" tabindex="-1">内盒尺寸计算（元素大小） <a class="header-anchor" href="#内盒尺寸计算-元素大小-1" aria-label="Permalink to &quot;内盒尺寸计算（元素大小）&quot;">​</a></h3><p>element 高度＝内容高度（height 包含了元素内容宽度、边框、内距）</p><p>element 宽度＝内容宽度（width 包含了元素内容宽度、边框、内距）</p><h1 id="box-sizing-css3-新自定义盒子属性" tabindex="-1">box-sizing(css3 新自定义盒子属性) <a class="header-anchor" href="#box-sizing-css3-新自定义盒子属性" aria-label="Permalink to &quot;box-sizing(css3 新自定义盒子属性)&quot;">​</a></h1><h3 id="box-sizing-content-box-border-box-inherit" tabindex="-1">box-sizing: content-box | border-box | inherit <a class="header-anchor" href="#box-sizing-content-box-border-box-inherit" aria-label="Permalink to &quot;box-sizing: content-box | border-box | inherit&quot;">​</a></h3><p>属性值 content-box 默认值，其让元素维持 W3C 的标准盒模型，也就是说元素的宽度和高度（width/height）等于元素边框宽度（border）加上元素内距（padding）加上元素内容宽度或高度（content width/ height），也就是 element width/height = border + padding + content width / height</p><p>border-box 重新定义 CSS2.1 中盒模型组成的模式，让元素维持 IE 传统的盒模型（IE6 以下版本和 IE6-7 怪异模式），也就是说元素的宽度或高度等于元素内容的宽度或高度。从上面盒模型介绍可知，这里的内容宽度或高度包含了元素的 border、padding、内容的宽度或高度（此处的内容宽度或高度＝盒子的宽度或高度—边框—内距）。</p><p>inherit 使元素继承父元素的盒模型模式</p>`,46),l=[r];function i(h,c,d,s,u,p){return a(),o("div",null,l)}const _=e(n,[["render",i]]);export{b as __pageData,_ as default};
