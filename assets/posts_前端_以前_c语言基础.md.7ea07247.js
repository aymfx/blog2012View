import{_ as s,c as a,o as n,N as l}from"./chunks/framework.1f285265.js";const C=JSON.parse(`{"title":"'c语言基础'","description":"","frontmatter":{"title":"'c语言基础'","tags":["c"],"date":"2018-08-29T11:54:14.000Z"},"headers":[],"relativePath":"posts/前端/以前/c语言基础.md"}`),p={name:"posts/前端/以前/c语言基础.md"},o=l(`<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><blockquote><p>最近在准备 c++的考试，没办法只能把忘掉的 C 语言基础再补回来,做点笔记</p></blockquote><h2 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-label="Permalink to &quot;基础&quot;">​</a></h2><h3 id="c-语言结构" tabindex="-1">C 语言结构 <a class="header-anchor" href="#c-语言结构" aria-label="Permalink to &quot;C 语言结构&quot;">​</a></h3><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">欢迎来C语言世界</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>#include &lt;stdio.h&gt;就是一条预处理命令，它的作用是通知 C 语言编译系统在对 C 程序进行正式编译之前需做一些预处理工作。</p></blockquote><blockquote><p>函数就是实现代码逻辑的一个小的单元</p></blockquote><blockquote><p>在最新的 C 标准中，main 函数前的类型为 int 而不是 void</p></blockquote><blockquote><p>一个 C 程序有且只有一个主函数，即 main 函数。</p></blockquote><h3 id="c-语言注释方法有两种" tabindex="-1">C 语言注释方法有两种： <a class="header-anchor" href="#c-语言注释方法有两种" aria-label="Permalink to &quot;C 语言注释方法有两种：&quot;">​</a></h3><ul><li>多行注释： /_ 注释内容 _/</li><li>单行注释： //注释一行</li></ul><h3 id="标识符定义" tabindex="-1">标识符定义 <a class="header-anchor" href="#标识符定义" aria-label="Permalink to &quot;标识符定义&quot;">​</a></h3><blockquote><p>C 语言规定，标识符可以是字母(A ～ Z，a ～ z)、数字(0 ～ 9)、下划线_组成的字符串，并且第一个字符必须是字母或下划线。</p></blockquote><p>(1)标识符的长度最好不要超过 8 位，因为在某些版本的 C 中规定标识符前 8 位有效，当两个标识符前 8 位相同时，则被认为是同一个标识符。</p><p>(2)标识符是严格区分大小写的。例如 Imooc 和 imooc 是两个不同的标识符。</p><p>(3)标识符最好选择有意义的英文单词组成做到&quot;见名知意&quot;，不要使用中文。</p><p>(4)标识符不能是 C 语言的关键字。</p><h3 id="变量赋值" tabindex="-1">变量赋值 <a class="header-anchor" href="#变量赋值" aria-label="Permalink to &quot;变量赋值&quot;">​</a></h3><blockquote><p>变量就是可以变化的量，而每个变量都会有一个名字（标识符）。变量占据内存中一定的存储单元。使用变量之前必须先定义变量，要区分变量名和变量值是两个不同的概念。就好比：住在房间里的客人与房间号是两个不同的概念。</p></blockquote><p>定义方式</p><ul><li>数据类型 变量名;</li><li>数据类型 变量名，变量名，。。。;</li></ul><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> num</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> num1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">num2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">num3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">num3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><blockquote><p>在定义中不允许连续赋值，如 int a=b=c=5;是不合法的</p></blockquote><h3 id="基本数据类型" tabindex="-1">基本数据类型 <a class="header-anchor" href="#基本数据类型" aria-label="Permalink to &quot;基本数据类型&quot;">​</a></h3><blockquote><p>C 语言中，数据类型可分为：基本数据类型，构造数据类型，指针类型，空类型四大类</p></blockquote><p><img src="http://img.mukewang.com/552b3d930001acdd04260268.jpg" alt="数据类型"></p><h4 id="基本数据类型-整型、实型与字符型" tabindex="-1">基本数据类型 - 整型、实型与字符型 <a class="header-anchor" href="#基本数据类型-整型、实型与字符型" aria-label="Permalink to &quot;基本数据类型 - 整型、实型与字符型&quot;">​</a></h4><p><img src="http://img.mukewang.com/547fd0af0001b55b06300091.jpg" alt="基本数据类型"></p><p>整形</p><p><img src="http://img.mukewang.com/55adb2e70001360607410143.jpg" alt="整形"></p><blockquote><p>int、short int、long int 是根据编译环境的不同，所取范围不同。而其中 short int 和 long int 至少是表中所写范围，但是 int 在表中是以 16 位编译环境写的取值范围。另外 c 语言 int 的取值范围在于他占用的字节数 ，不同的编译器，规定是不一样。ANSI 标准定义 int 是占 2 个字节，TC 是按 ANSI 标准的，它的 int 是占 2 个字节的。但是在 VC 里，一个 int 是占 4 个字节的</p></blockquote><p>浮点数</p><p><img src="http://img.mukewang.com/547fd1250001132307420082.jpg" alt="浮点数"></p><p>字符串</p><blockquote><p>C 语言中不存在字符串变量，字符串只能存在字符数组中</p></blockquote><h3 id="格式化输出语句" tabindex="-1">格式化输出语句 <a class="header-anchor" href="#格式化输出语句" aria-label="Permalink to &quot;格式化输出语句&quot;">​</a></h3><blockquote><p>格式化输出语句，也可以说是占位输出，是将各种类型的数据按照格式化后的类型及指定的位置从计算机上显示</p></blockquote><ul><li>格式为：printf(&quot;输出格式符&quot;，输出项);</li></ul><p><img src="http://img.mukewang.com/54856b620001e2ad04880099.jpg" alt="格式符"></p><h3 id="常亮" tabindex="-1">常亮 <a class="header-anchor" href="#常亮" aria-label="Permalink to &quot;常亮&quot;">​</a></h3><ul><li>直接常量也称为字面量，是可以直接拿来使用，无需说明的量</li></ul><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1100</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%f</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1.100</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%l</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1.105990</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%c</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">p</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><ul><li>在 C 语言中，可以用一个标识符来表示一个常量，称之为符号常量。符号常量在使用之前必须先定义，其一般形式为：#define 标识符 常量值</li></ul><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PI</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3.1415926</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">圆周率是多少%f</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">PI</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>常量是不可改变的</p><h3 id="自动类型转换" tabindex="-1">自动类型转换 <a class="header-anchor" href="#自动类型转换" aria-label="Permalink to &quot;自动类型转换&quot;">​</a></h3><p>自动转换发生在不同数据类型运算时，在编译的时候自动完成</p><p><img src="http://img.mukewang.com/549aa7070001c93b03810128.jpg" alt="自动类型转换"></p><ul><li>char 类型数据转换为 int 类型数据遵循 ASCII 码中的对应值</li><li>字节小的可以向字节大的自动转换，但字节大的不能向字节小的自动转换</li></ul><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> c </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> n </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> c </span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">       //将c赋值给n</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">float</span><span style="color:#F07178;"> f </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> c </span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">     //将c赋值给f</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">double</span><span style="color:#F07178;"> d </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> c</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">     //将c赋值给d</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">n</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> //97</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%f</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">f</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> //97.000000</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%lf</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">d</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> //97.000000</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="强制类型转换" tabindex="-1">强制类型转换 <a class="header-anchor" href="#强制类型转换" aria-label="Permalink to &quot;强制类型转换&quot;">​</a></h3><p>强制类型转换是通过定义类型转换运算来实现的</p><p>形式为：(数据类型) (表达式)</p><p>注意项:</p><ul><li>数据类型和表达式都必须加括号，如把(int)(x/2+y)写成(int)x/2+y 则成了把 x 转换成 int 型之后再除 2 再与 y 相加了。</li><li>转换后不会改变原数据的类型及变量值，只在本次运算中临时性转换。</li><li>强制转换后的运算结果不遵循四舍五入原则</li></ul><h3 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;运算符&quot;">​</a></h3><pre><code>※ 算术运算符  a+b  a*b a-b a/b  a%b
</code></pre><p><img src="http://img.mukewang.com/54ac8dfb000126ad04510145.jpg" alt=""></p><pre><code>※ 赋值运算符   a=b
</code></pre><p><img src="http://img.mukewang.com/5492bd4700016e9103370083.jpg" alt=""></p><pre><code>※ 关系运算符   &gt;  &lt;  = &gt;= &lt;=  !=
</code></pre><p><img src="http://img.mukewang.com/5481551100017fbe04250141.jpg" alt=""></p><pre><code>※ 逻辑运算符  &amp; || !
</code></pre><p><img src="http://img.mukewang.com/54816483000195a203180087.jpg" alt=""></p><pre><code>※ 三目运算符  a&gt;b ? &quot;a&quot; : &quot;b&quot;
</code></pre><h3 id="运算符的优先级" tabindex="-1">运算符的优先级 <a class="header-anchor" href="#运算符的优先级" aria-label="Permalink to &quot;运算符的优先级&quot;">​</a></h3><p><img src="http://img.mukewang.com/54817fa90001654403370200.jpg" alt=""></p><h3 id="if-语句" tabindex="-1">if 语句 <a class="header-anchor" href="#if-语句" aria-label="Permalink to &quot;if 语句&quot;">​</a></h3><p>if</p><p><img src="http://img.mukewang.com/549cf202000188f802600278.jpg" alt=""></p><p>if - else</p><p><img src="http://img.mukewang.com/549cf0ad000157f603260281.jpg" alt=""></p><p>if - else - if</p><p><img src="http://img.mukewang.com/549cf81d0001d6e205180223.jpg" alt=""></p>`,74),t=[o];function e(c,r,i,F,D,y){return n(),a("div",null,t)}const d=s(p,[["render",e]]);export{C as __pageData,d as default};
