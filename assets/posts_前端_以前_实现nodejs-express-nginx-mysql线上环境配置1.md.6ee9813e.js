import{_ as e,c as s,o as l,N as o}from"./chunks/framework.1f285265.js";const k=JSON.parse('{"title":"实现nodejs+express+nginx+mysql线上环境配置1","description":"","frontmatter":{"title":"实现nodejs+express+nginx+mysql线上环境配置1","tags":["node"],"date":"2018-07-16T15:15:38.000Z"},"headers":[],"relativePath":"posts/前端/以前/实现nodejs-express-nginx-mysql线上环境配置1.md"}'),t={name:"posts/前端/以前/实现nodejs-express-nginx-mysql线上环境配置1.md"},a=o(`<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><blockquote><p>想学习下 nodejs 服务器的搭建全过程，毕竟这也是迈向后端的一大步，用的是 centos 服务器</p></blockquote><blockquote><p>需要实现 nodejs 环境配置 nginx 反向代理 mysql 的环境配置及使用 express 服务器的使用,防火墙的策略开关</p></blockquote><h2 id="创建-ssh" tabindex="-1">创建 ssh <a class="header-anchor" href="#创建-ssh" aria-label="Permalink to &quot;创建 ssh&quot;">​</a></h2><blockquote><p><a href="https://cloud.tencent.com/developer/article/1157620" target="_blank" rel="noreferrer">https://cloud.tencent.com/developer/article/1157620</a></p></blockquote><h2 id="安装-node" tabindex="-1">安装 node <a class="header-anchor" href="#安装-node" aria-label="Permalink to &quot;安装 node&quot;">​</a></h2><ol><li>安装 git</li></ol><blockquote><p>yum install git -y</p></blockquote><ol start="2"><li>安装 nvm 服务，这个是用来管理 node 版本的工具，可以在服务器上切换不同的 node 环境</li></ol><blockquote><p>curl -o- <a href="https://raw.githubusercontent.com/creationix/nvm/v0.33.9/install.sh" target="_blank" rel="noreferrer">https://raw.githubusercontent.com/creationix/nvm/v0.33.9/install.sh</a> | bash</p></blockquote><p>注：安装 nvm 后如果是使用 xshell 等工具连接服务器，则需要重新连接一次，不然会提示没有 nvm</p><ol start="3"><li>使用 nvm 进行安装 nodejs</li></ol><blockquote><p>nvm install vxxxx xxx 表示版本</p></blockquote><ol start="4"><li>如果没有自动启用当前下载的版本，使用下面命令</li></ol><blockquote><p>nvm use vxxx</p></blockquote><ol start="5"><li>当然如果要是没有自动配置成默认的 node 版本的话，执行下面命令</li></ol><blockquote><p>nvm alias default vxxx</p></blockquote><ol start="6"><li>使用淘宝源安装最新的 npm</li></ol><blockquote><p>npm install -g cnpm --registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noreferrer">https://registry.npm.taobao.org</a></p></blockquote><h2 id="nginx-配置" tabindex="-1">nginx 配置 <a class="header-anchor" href="#nginx-配置" aria-label="Permalink to &quot;nginx 配置&quot;">​</a></h2><ol><li><p>cd /usr/local</p></li><li><p>运行以下命令安装 PCRE 和 zlib 库。</p></li></ol><blockquote><p>yum -y install pcre pcre-devel zlib-devel</p></blockquote><ol start="3"><li>下载 Nginx</li></ol><blockquote><p>wget <a href="http://nginx.org/download/nginx-1.12.2.tar.gz" target="_blank" rel="noreferrer">http://nginx.org/download/nginx-1.12.2.tar.gz</a></p></blockquote><ol start="4"><li>解压安装包</li></ol><blockquote><p>tar -xvzf nginx-1.12.2.tar.gz</p></blockquote><ol start="5"><li>下载 OpenSSL</li></ol><blockquote><p>wget <a href="https://www.openssl.org/source/openssl-1.1.0g.tar.gz" target="_blank" rel="noreferrer">https://www.openssl.org/source/openssl-1.1.0g.tar.gz</a></p></blockquote><ol start="6"><li>解压安装包</li></ol><blockquote><p>tar -xvzf openssl-1.1.0g.tar.gz</p></blockquote><ol start="7"><li><p>cd nginx-1.12.2</p></li><li><p>执行下列命令</p></li></ol><div class="language-vim"><button title="Copy Code" class="copy"></button><span class="lang">vim</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">.</span><span style="color:#C3E88D;">/configure --prefix=/</span><span style="color:#A6ACCD;">usr</span><span style="color:#C3E88D;">/local/</span><span style="color:#A6ACCD;">nginx --with-http_stub_status_module --with-http_gzip_static_module --with-http_ssl_module --with-openssl</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">/usr/</span><span style="color:#A6ACCD;">local/openssl-</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">.0g</span></span>
<span class="line"></span></code></pre></div><p>报错:./configure: error: C compiler cc is not found</p><blockquote><p>yum install gcc</p></blockquote><blockquote><p>继续安装</p></blockquote><div class="language-vim"><button title="Copy Code" class="copy"></button><span class="lang">vim</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">make</span><span style="color:#89DDFF;"> &amp;&amp; </span><span style="color:#A6ACCD;">make install</span></span>
<span class="line"></span></code></pre></div><ol start="9"><li>生成证书</li></ol><blockquote><p>openssl req -new -x509 -nodes -out server.crt -keyout server.key</p></blockquote><div class="language-conf"><button title="Copy Code" class="copy"></button><span class="lang">conf</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">server {</span></span>
<span class="line"><span style="color:#A6ACCD;">        listen 443;</span></span>
<span class="line"><span style="color:#A6ACCD;">        server_name www.ldyldy.cn; #填写绑定证书的域名</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl on;</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl_certificate 1_www.ldyldy.com_bundle.crt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl_certificate_key 2_www.ldyldy.com.key;</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl_session_timeout 5m;</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl_prefer_server_ciphers on;</span></span>
<span class="line"><span style="color:#A6ACCD;">        location / {</span></span>
<span class="line"><span style="color:#A6ACCD;">            root   html; #站点目录</span></span>
<span class="line"><span style="color:#A6ACCD;">            index  index.html index.htm;</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="添加防火墙配置" tabindex="-1">添加防火墙配置 <a class="header-anchor" href="#添加防火墙配置" aria-label="Permalink to &quot;添加防火墙配置&quot;">​</a></h2><p>查看防火墙状态是否开启</p><blockquote><p>firewall-cmd --state</p></blockquote><p>启动服务</p><blockquote><p>systemctl start firewalld</p></blockquote><p>设为开机启动</p><blockquote><p>systemctl enable firewalld</p></blockquote><p>查看端口列表</p><blockquote><p>firewall-cmd --permanent --list-port</p></blockquote><p>添加防火墙端口号</p><blockquote><p>firewall-cmd --permanent --zone=public --add-port=80/tcp</p></blockquote><p>移除防火墙端口号</p><blockquote><p>firewall-cmd --permanent --zone=public --remove-port=80/tcp</p></blockquote><p>重启</p><blockquote><p>firewall-cmd --reload</p></blockquote><p>命令含义：</p><pre><code>--zone #作用域

--add-port=80/tcp  #添加端口，格式为：端口/通讯协议

--permanent   #永久生效，没有此参数重启后失效
</code></pre><p>查看防火墙状态</p><blockquote><p>systemctl status firewalld.service</p></blockquote><p>启动防火墙</p><blockquote><p>systemctl start firewalld.service</p></blockquote><p>关闭防火墙</p><blockquote><p>systemctl stop firewalld.service</p></blockquote><p>重新启动防火墙</p><blockquote><p>systemctl restart firewalld.service</p></blockquote><p>查看端口占用</p><blockquote><p>lsof -i:8080</p></blockquote>`,66),n=[a];function p(r,c,i,u,d,b){return l(),s("div",null,n)}const h=e(t,[["render",p]]);export{k as __pageData,h as default};
