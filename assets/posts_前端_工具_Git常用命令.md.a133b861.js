import{_ as a,c as i,o as t,N as e}from"./chunks/framework.1f285265.js";const g=JSON.parse('{"title":"git常用命令","description":"git常用命令 记录下来方便查询","frontmatter":{"title":"git常用命令","date":"2022-02-19T00:00:00.000Z","description":"git常用命令 记录下来方便查询","tags":["工具"]},"headers":[],"relativePath":"posts/前端/工具/Git常用命令.md"}'),l={name:"posts/前端/工具/Git常用命令.md"},r=e('<h2 id="修改远程提交的仓库地址" tabindex="-1">修改远程提交的仓库地址 <a class="header-anchor" href="#修改远程提交的仓库地址" aria-label="Permalink to &quot;修改远程提交的仓库地址&quot;">​</a></h2><ul><li>git remote set-url origin xxx</li></ul><h2 id="添加远程仓库" tabindex="-1">添加远程仓库 <a class="header-anchor" href="#添加远程仓库" aria-label="Permalink to &quot;添加远程仓库&quot;">​</a></h2><ul><li>git remote add origin xxx</li></ul><h2 id="创建公钥" tabindex="-1">创建公钥 <a class="header-anchor" href="#创建公钥" aria-label="Permalink to &quot;创建公钥&quot;">​</a></h2><ul><li>ssh-keygen -o</li></ul><h2 id="覆盖远程分支代码-强制推送到远端" tabindex="-1">覆盖远程分支代码 强制推送到远端 <a class="header-anchor" href="#覆盖远程分支代码-强制推送到远端" aria-label="Permalink to &quot;覆盖远程分支代码 强制推送到远端&quot;">​</a></h2><ul><li>git push --set-upstream origin dev -f</li></ul><h2 id="显示当前的-git-配置" tabindex="-1">显示当前的 Git 配置 <a class="header-anchor" href="#显示当前的-git-配置" aria-label="Permalink to &quot;显示当前的 Git 配置&quot;">​</a></h2><ul><li>git config --list</li></ul><h2 id="设置提交代码时的用户信息" tabindex="-1">设置提交代码时的用户信息 <a class="header-anchor" href="#设置提交代码时的用户信息" aria-label="Permalink to &quot;设置提交代码时的用户信息&quot;">​</a></h2><ul><li>git config [--global] user.name &quot;[name]&quot;</li><li>git config [--global] user.email &quot;[email address]&quot;</li></ul><h2 id="提交时显示所有-diff-信息" tabindex="-1">提交时显示所有 diff 信息 <a class="header-anchor" href="#提交时显示所有-diff-信息" aria-label="Permalink to &quot;提交时显示所有 diff 信息&quot;">​</a></h2><ul><li>git commit -v</li></ul><h2 id="列出所有本地分支和远程分支" tabindex="-1">列出所有本地分支和远程分支 <a class="header-anchor" href="#列出所有本地分支和远程分支" aria-label="Permalink to &quot;列出所有本地分支和远程分支&quot;">​</a></h2><ul><li>git branch -a</li></ul><h2 id="合并指定分支到当前分支" tabindex="-1">合并指定分支到当前分支 <a class="header-anchor" href="#合并指定分支到当前分支" aria-label="Permalink to &quot;合并指定分支到当前分支&quot;">​</a></h2><ul><li>git merge [branch]</li></ul><h2 id="删除分支" tabindex="-1">删除分支 <a class="header-anchor" href="#删除分支" aria-label="Permalink to &quot;删除分支&quot;">​</a></h2><ul><li>git branch -d [branch-name]</li></ul><h2 id="删除远程分支" tabindex="-1">删除远程分支 <a class="header-anchor" href="#删除远程分支" aria-label="Permalink to &quot;删除远程分支&quot;">​</a></h2><ul><li>git push origin --delete [branch-name]</li><li>git branch -dr [remote/branch]</li></ul><h2 id="暂时将未提交的变化移除-稍后再移入" tabindex="-1">暂时将未提交的变化移除，稍后再移入 <a class="header-anchor" href="#暂时将未提交的变化移除-稍后再移入" aria-label="Permalink to &quot;暂时将未提交的变化移除，稍后再移入&quot;">​</a></h2><ul><li>git stash</li><li>git stash pop</li></ul><h2 id="新建一个-commit-用来撤销指定-commit-后者的所有变化都将被前者抵消-并且应用到当前分支" tabindex="-1">新建一个 commit，用来撤销指定 commit 后者的所有变化都将被前者抵消，并且应用到当前分支 <a class="header-anchor" href="#新建一个-commit-用来撤销指定-commit-后者的所有变化都将被前者抵消-并且应用到当前分支" aria-label="Permalink to &quot;新建一个 commit，用来撤销指定 commit 后者的所有变化都将被前者抵消，并且应用到当前分支&quot;">​</a></h2><ul><li>git revert [commit]</li></ul>',26),o=[r];function h(n,s,u,c,d,m){return t(),i("div",null,o)}const f=a(l,[["render",h]]);export{g as __pageData,f as default};
