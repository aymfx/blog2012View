import{_ as o,c as e,o as t,N as p}from"./chunks/framework.1f285265.js";const m=JSON.parse('{"title":"用linux服务器搭建node环境（安装node）","description":"","frontmatter":{"title":"用linux服务器搭建node环境（安装node）","date":"2018-01-13T20:07:09.000Z","tags":["node"]},"headers":[],"relativePath":"posts/前端/以前/用linux服务器搭建node环境（安装node）.md"}'),l={name:"posts/前端/以前/用linux服务器搭建node环境（安装node）.md"},a=p('<p><img src="https://aymfx.github.io/img/a201801/b.jpg" alt="美女"></p><h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h1><blockquote><p>双十一买了台服务，装的是linux系统，配置比较低，但是自己个人学习还是够用了。</p></blockquote><h1 id="准备-安装的服务" tabindex="-1">准备 安装的服务 <a class="header-anchor" href="#准备-安装的服务" aria-label="Permalink to &quot;准备 安装的服务&quot;">​</a></h1><blockquote><p>node nginx mysql mongose</p></blockquote><h3 id="安装node" tabindex="-1">安装node <a class="header-anchor" href="#安装node" aria-label="Permalink to &quot;安装node&quot;">​</a></h3><blockquote><p>下载最新版本的node</p></blockquote><blockquote><p>==wget <a href="https://npm.taobao.org/mirrors/node/v9.4.0/node-v9.4.0-linux-x64.tar.gz==" target="_blank" rel="noreferrer">https://npm.taobao.org/mirrors/node/v9.4.0/node-v9.4.0-linux-x64.tar.gz==</a></p></blockquote><blockquote><p>解压</p></blockquote><blockquote><p>==tar -xvf node-v9.4.0-linux-x64.tar.gz==</p></blockquote><blockquote><p>进入页面查看是否安装好了</p></blockquote><blockquote><p>==cd node-v9.4.0-linux-x64/bin==</p></blockquote><blockquote><p>==./node -v== //查看版本</p></blockquote><blockquote><p>添加全局变量</p></blockquote><blockquote><p>==vim /etc/profile==</p></blockquote><blockquote><p>添加下面两条 (大家按实际的路径来走) 我的路径如下</p></blockquote><blockquote><p>==export NODE_HOME=/usr/local/ly/node/node-v9.4.0-linux-x64==</p></blockquote><blockquote><p>==export PATH=$NODE_HOME/bin:$PATH==</p></blockquote><blockquote><p>编译</p></blockquote><blockquote><p>==source /etc/profile==</p></blockquote><blockquote><p>验证是否成功</p></blockquote><blockquote><p>==node -v==</p></blockquote><h3 id="pm2的安装" tabindex="-1">pm2的安装 <a class="header-anchor" href="#pm2的安装" aria-label="Permalink to &quot;pm2的安装&quot;">​</a></h3><blockquote><p>pm2 是一个带有负载均衡功能的Node应用的进程管理器. 当你要把你的独立代码利用全部的服务器上的所有CPU，并保证进程永远都活着，0秒的重载， PM2是完美的。它非常适合IaaS结构，但不要把它用于PaaS方案（随后将开发Paas的解决方案）</p></blockquote><h3 id="pm2常用命令" tabindex="-1">pm2常用命令 <a class="header-anchor" href="#pm2常用命令" aria-label="Permalink to &quot;pm2常用命令&quot;">​</a></h3><blockquote><p>$ npm install pm2 -g # 命令行安装 pm2</p></blockquote><blockquote><p>$ pm2 start app.js -i 4</p></blockquote><ul><li>后台运行pm2，启动4个app.js</li><li>也可以把&#39;max&#39; 参数传递给 start</li><li>正确的进程数目依赖于Cpu的核心数目</li></ul><blockquote><p>$ pm2 start app.js --name my-api # 命名进程</p></blockquote><blockquote><p>$ pm2 list # 显示所有进程状态</p></blockquote><blockquote><p>$ pm2 monit # 监视所有进程</p></blockquote><blockquote><p>$ pm2 logs # 显示所有进程日志</p></blockquote><blockquote><p>$ pm2 stop all # 停止所有进程</p></blockquote><blockquote><p>$ pm2 restart all # 重启所有进程</p></blockquote><blockquote><p>$ pm2 reload all # 0秒停机重载进程 (用于 NETWORKED 进程)</p></blockquote><blockquote><p>$ pm2 stop 0 # 停止指定的进程</p></blockquote><blockquote><p>$ pm2 restart 0 # 重启指定的进程</p></blockquote><blockquote><p>$ pm2 startup # 产生 init 脚本 保持进程活着</p></blockquote><blockquote><p>$ pm2 web # 运行健壮的 computer API endpoint</p></blockquote><blockquote><p>$ pm2 delete 0 # 杀死指定的进程</p></blockquote><blockquote><p>$ pm2 delete all # 杀死全部进程</p></blockquote><h2 id="安装pm2并且调试下" tabindex="-1">安装pm2并且调试下 <a class="header-anchor" href="#安装pm2并且调试下" aria-label="Permalink to &quot;安装pm2并且调试下&quot;">​</a></h2><blockquote><p>安装淘宝镜像</p></blockquote><blockquote><p>==npm install -g cnpm --registry=<a href="https://registry.npm.taobao.org==" target="_blank" rel="noreferrer">https://registry.npm.taobao.org==</a></p></blockquote><blockquote><p>全局安装pm2</p></blockquote><blockquote><p>==cnpm i -g pm2==</p></blockquote><blockquote><p>是否安装成功</p></blockquote><blockquote><p>pm2 -v</p></blockquote><h2 id="跑一个小型服务器" tabindex="-1">跑一个小型服务器 <a class="header-anchor" href="#跑一个小型服务器" aria-label="Permalink to &quot;跑一个小型服务器&quot;">​</a></h2><blockquote><p>在linux下创建一个demo文件夹</p></blockquote><blockquote><p>cd demo</p></blockquote><blockquote><p>创建一个app.js 文件</p></blockquote><blockquote><p>内容如下</p></blockquote><p><img src="https://aymfx.github.io/img/a201801/b.png" alt="app.js"></p><blockquote><p>pm2 start app.js</p></blockquote><blockquote><p>浏览器访问如下</p></blockquote><p><img src="https://aymfx.github.io/img/a201801/b1.png" alt="app.js"></p><h1 id="下一接我们继续" tabindex="-1">下一接我们继续 <a class="header-anchor" href="#下一接我们继续" aria-label="Permalink to &quot;下一接我们继续&quot;">​</a></h1>',58),c=[a];function u(b,r,q,n,k,i){return t(),e("div",null,c)}const d=o(l,[["render",u]]);export{m as __pageData,d as default};
