import{_ as a,c as s,o as n,N as e}from"./chunks/framework.1f285265.js";const u=JSON.parse('{"title":"给自己的网站设置https认证(nginx服务器)","description":"","frontmatter":{"title":"给自己的网站设置https认证(nginx服务器)","date":"2018-01-17T20:15:46.000Z","tags":["node"]},"headers":[],"relativePath":"posts/前端/以前/给自己的网站设置https认证(nginx服务器).md"}'),t={name:"posts/前端/以前/给自己的网站设置https认证(nginx服务器).md"},l=e(`<p><img src="https://aymfx.github.io/img/a201801/d.png" alt="美女"></p><h3 id="网站进行认证操作-1" tabindex="-1">网站进行认证操作 1 <a class="header-anchor" href="#网站进行认证操作-1" aria-label="Permalink to &quot;网站进行认证操作 1&quot;">​</a></h3><blockquote><p>进入腾讯云选择 ssl 安装服务 <img src="https://aymfx.github.io/img/a201801/d1.png" alt="美女"></p></blockquote><h3 id="下载证书" tabindex="-1">下载证书 <a class="header-anchor" href="#下载证书" aria-label="Permalink to &quot;下载证书&quot;">​</a></h3><p><img src="https://aymfx.github.io/img/a201801/d2.png" alt="美女"></p><h3 id="包含如下东西" tabindex="-1">包含如下东西 <a class="header-anchor" href="#包含如下东西" aria-label="Permalink to &quot;包含如下东西&quot;">​</a></h3><blockquote><p>Nginx 文件夹内获得 SSL 证书文件 1_www.domain.com_bundle.crt 和私钥文 2_www.domain.com.key</p></blockquote><blockquote><p>1_www.domain.com_bundle.crt 文件包括两段证书代码 “-----BEGIN CERTIFICATE-----”和“-----END CERTIFICATE-----”,</p></blockquote><blockquote><p>2_www.domain.com.key 文件包括一段私钥代码“-----BEGIN RSA PRIVATE KEY-----”和“-----END RSA PRIVATE KEY-----”。</p></blockquote><h3 id="证书安装" tabindex="-1">证书安装 <a class="header-anchor" href="#证书安装" aria-label="Permalink to &quot;证书安装&quot;">​</a></h3><p><img src="https://aymfx.github.io/img/a201801/d3.png" alt="美女"></p><h3 id="文件配置" tabindex="-1">文件配置 <a class="header-anchor" href="#文件配置" aria-label="Permalink to &quot;文件配置&quot;">​</a></h3><blockquote><p>vim /usr/local/nginx/conf/nginx.conf</p></blockquote><p><img src="https://aymfx.github.io/img/a201801/d4.png" alt="美女"></p><h3 id="这是官方示例" tabindex="-1">这是官方示例 <a class="header-anchor" href="#这是官方示例" aria-label="Permalink to &quot;这是官方示例&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">server {</span></span>
<span class="line"><span style="color:#A6ACCD;">        listen 443;</span></span>
<span class="line"><span style="color:#A6ACCD;">        server_name www.domain.com; #填写绑定证书的域名</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl on;</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl_certificate 1_www.domain.com_bundle.crt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl_certificate_key 2_www.domain.com.key;</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl_session_timeout 5m;</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置</span></span>
<span class="line"><span style="color:#A6ACCD;">        ssl_prefer_server_ciphers on;</span></span>
<span class="line"><span style="color:#A6ACCD;">        location / {</span></span>
<span class="line"><span style="color:#A6ACCD;">            root   html; #站点目录</span></span>
<span class="line"><span style="color:#A6ACCD;">            index  index.html index.htm;</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="配置参数" tabindex="-1">配置参数 <a class="header-anchor" href="#配置参数" aria-label="Permalink to &quot;配置参数&quot;">​</a></h3><p>配置文件参数 说明 listen 443 SSL 访问端口号为 443 ssl on 启用 SSL 功能 ssl_certificate 证书文件 ssl_certificate_key 私钥文件 ssl_protocols 使用的协议 ssl_ciphers 配置加密套件，写法遵循 openssl 标准</p><h3 id="重启" tabindex="-1">重启 <a class="header-anchor" href="#重启" aria-label="Permalink to &quot;重启&quot;">​</a></h3><blockquote><p>/usr/local/nginx/sbin/nginx -s reload</p></blockquote><p>###如图 <img src="https://aymfx.github.io/img/a201801/d5.png" alt="美女"></p>`,21),o=[l];function p(i,c,r,h,_,d){return n(),s("div",null,o)}const A=a(t,[["render",p]]);export{u as __pageData,A as default};
