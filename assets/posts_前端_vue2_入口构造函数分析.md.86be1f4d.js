import{_ as s,c as n,o as a,N as l}from"./chunks/framework.1f285265.js";const u=JSON.parse('{"title":"入口构造函数分析","description":"构造函数","frontmatter":{"title":"入口构造函数分析","date":"2022-01-10T00:00:00.000Z","description":"构造函数","tags":["vue2"]},"headers":[],"relativePath":"posts/前端/vue2/入口构造函数分析.md"}'),p={name:"posts/前端/vue2/入口构造函数分析.md"},o=l(`<h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><p><strong>入口文件初始化</strong></p><ul><li><a href="/posts/前端/vue2/入口构造函数分析.html">构造函数</a></li><li><a href="/posts/前端/vue2/initMixin.html">initMixin 函数</a></li><li><a href="/posts/前端/vue2/stateMixin.html">stateMixin 函数</a></li><li><a href="/posts/前端/vue2/eventsMixin.html">eventsMixin 函数</a></li><li><a href="/posts/前端/vue2/lifecycleMixin.html">lifecycleMixin 函数</a></li><li><a href="/posts/前端/vue2/renderMixin.html">renderMixin 函数</a></li><li><a href="/posts/前端/vue2/initGlobalAPI.html">initGlobalAPI 函数</a></li></ul><p><strong>响应式原理</strong></p><ul><li><a href="/posts/前端/vue2/响应式原理.html">响应式原理</a></li><li><a href="/posts/前端/vue2/props处理.html">props 处理</a></li></ul><h2 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-label="Permalink to &quot;准备&quot;">​</a></h2><ul><li><p>Vue 源码版本 2.7.8</p></li><li><p>增加 map 文件方便断点 在 package.json --scripts --- dev 配置改成如下可以自动生成.map 文件</p><ul><li>&quot;dev&quot;: &quot;rollup -w -c scripts/config.js --sourcemap --environment TARGET:full-dev&quot;, 增加--sourcemap</li></ul></li><li><p>2.7.8 已用了 ts 进行类型判断，flow 已经不在 vue2.0 使用了</p></li><li><p>主要分析目录</p></li></ul><p><img src="https://raw.githubusercontent.com/aymfx/pic/mian/img/image-20220827102128861.png" alt="image-20220827102128861"></p><h2 id="通过-rollup-构建版本" tabindex="-1">通过 rollup 构建版本 <a class="header-anchor" href="#通过-rollup-构建版本" aria-label="Permalink to &quot;通过 rollup 构建版本&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">rollup -w -c scripts/config.js --sourcemap --environment TARGET:full-dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev:cjs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">rollup -w -c scripts/config.js --environment TARGET:runtime-cjs-dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev:esm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">rollup -w -c scripts/config.js --environment TARGET:runtime-esm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev:ssr</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">rollup -w -c scripts/config.js --environment TARGET:server-renderer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dev:compiler</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">rollup -w -c scripts/config.js --environment TARGET:compiler </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">## 前提</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">入口文件就是下面这段代码，我们可以看出真正的</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Vue</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">构造函数来自</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./instance/index</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">里面的文件，这里它还挂载了三个属性在原型上面分别是</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">-</span><span style="color:#A6ACCD;"> $isServer</span></span>
<span class="line"><span style="color:#FFCB6B;">-</span><span style="color:#A6ACCD;"> $ssrContext</span></span>
<span class="line"><span style="color:#FFCB6B;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FunctionalRenderContext</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">\`\`\`</span><span style="color:#FFCB6B;">javascript</span></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#C3E88D;"> vue-analyse/src/core/index.ts</span></span>
<span class="line"><span style="color:#FFCB6B;">import</span><span style="color:#C3E88D;"> Vue from </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./instance/index</span><span style="color:#89DDFF;">&#39;;</span></span>
<span class="line"><span style="color:#FFCB6B;">import</span><span style="color:#C3E88D;"> { initGlobalAPI } from </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./global-api/index</span><span style="color:#89DDFF;">&#39;;</span></span>
<span class="line"><span style="color:#FFCB6B;">import</span><span style="color:#C3E88D;"> { isServerRendering } from </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">core/util/env</span><span style="color:#89DDFF;">&#39;;</span></span>
<span class="line"><span style="color:#FFCB6B;">import</span><span style="color:#C3E88D;"> { FunctionalRenderContext } from </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">core/vdom/create-functional-component</span><span style="color:#89DDFF;">&#39;;</span></span>
<span class="line"><span style="color:#FFCB6B;">import</span><span style="color:#C3E88D;"> { version } from </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">v3</span><span style="color:#89DDFF;">&#39;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">initGlobalAPI(Vue</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Object.defineProperty(Vue.prototype,</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">$isServer</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">, {</span></span>
<span class="line"><span style="color:#C3E88D;">  </span><span style="color:#FFCB6B;">get:</span><span style="color:#C3E88D;"> isServerRendering,</span></span>
<span class="line"><span style="color:#C3E88D;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Object.defineProperty(Vue.prototype,</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">$ssrContext</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">, {</span></span>
<span class="line"><span style="color:#C3E88D;">  </span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">()</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C3E88D;">    </span><span style="color:#FFCB6B;">/*</span><span style="color:#C3E88D;"> istanbul ignore next </span><span style="color:#A6ACCD;">*</span><span style="color:#C3E88D;">/</span></span>
<span class="line"><span style="color:#C3E88D;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#C3E88D;"> this.</span><span style="color:#A6ACCD;">$vnode</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">this.</span><span style="color:#A6ACCD;">$vnode</span><span style="color:#FFCB6B;">.ssrContext</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C3E88D;">  </span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">,</span></span>
<span class="line"><span style="color:#C3E88D;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#C3E88D;"> expose FunctionalRenderContext for ssr runtime helper installation</span></span>
<span class="line"><span style="color:#FFCB6B;">Object.defineProperty(Vue,</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">FunctionalRenderContext</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">, {</span></span>
<span class="line"><span style="color:#C3E88D;">  </span><span style="color:#FFCB6B;">value:</span><span style="color:#C3E88D;"> FunctionalRenderContext,</span></span>
<span class="line"><span style="color:#C3E88D;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Vue.version</span><span style="color:#C3E88D;"> = version</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#C3E88D;"> default Vue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>我们去下一个文件看看</p><p>VueJS 通过一个构造函数开始进行一系列的初始化操作，主要经过以下几部分，这是在 js 加载的时候就要开始做的事情</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//  vue-analyse/src/core/instance/index.ts</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Vue</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//vue 构造函数</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">__DEV__</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">instanceof</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Vue</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//只能被初始化一次 __DEV__是rollup注入的</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">warn</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Vue is a constructor and should be called with the \`new\` keyword</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">_init</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">options</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//@ts-expect-error Vue has function type</span></span>
<span class="line"><span style="color:#82AAFF;">initMixin</span><span style="color:#A6ACCD;">(Vue)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//@ts-expect-error Vue has function type</span></span>
<span class="line"><span style="color:#82AAFF;">stateMixin</span><span style="color:#A6ACCD;">(Vue)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//@ts-expect-error Vue has function type</span></span>
<span class="line"><span style="color:#82AAFF;">eventsMixin</span><span style="color:#A6ACCD;">(Vue)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//@ts-expect-error Vue has function type</span></span>
<span class="line"><span style="color:#82AAFF;">lifecycleMixin</span><span style="color:#A6ACCD;">(Vue)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//@ts-expect-error Vue has function type</span></span>
<span class="line"><span style="color:#82AAFF;">renderMixin</span><span style="color:#A6ACCD;">(Vue)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><img src="https://raw.githubusercontent.com/aymfx/pic/mian/img/image-20220827103933999.png" alt="image-20220827103933999"></p><p>我们在页面进行 new Vue(config)实例化操作时，其实就是对这个构造函数进行实例化,下面我们就开始从构造函数的初始化操作开始讲起 initMixin 方法</p>`,15),e=[o];function t(c,r,i,y,D,F){return a(),n("div",null,e)}const A=s(p,[["render",t]]);export{u as __pageData,A as default};
