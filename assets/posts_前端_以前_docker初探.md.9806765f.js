import{_ as s,c as a,o,N as n}from"./chunks/framework.1f285265.js";const C=JSON.parse('{"title":"docker初探","description":"","frontmatter":{"title":"docker初探","tags":["node"],"date":"2018-07-21T15:58:53.000Z"},"headers":[],"relativePath":"posts/前端/以前/docker初探.md"}'),l={name:"posts/前端/以前/docker初探.md"},p=n(`<h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><blockquote><p>sudo yum install docker</p></blockquote><h3 id="启动-docker-后台服务" tabindex="-1">启动 Docker 后台服务 <a class="header-anchor" href="#启动-docker-后台服务" aria-label="Permalink to &quot;启动 Docker 后台服务&quot;">​</a></h3><blockquote><p>service docker start</p></blockquote><h3 id="停止-docker-后台服务" tabindex="-1">停止 Docker 后台服务 <a class="header-anchor" href="#停止-docker-后台服务" aria-label="Permalink to &quot;停止 Docker 后台服务&quot;">​</a></h3><blockquote><p>service docker stop</p></blockquote><h3 id="安装加速镜像" tabindex="-1">安装加速镜像 <a class="header-anchor" href="#安装加速镜像" aria-label="Permalink to &quot;安装加速镜像&quot;">​</a></h3><blockquote><p>vi /etc/docker/daemon.json</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">registry-mirrors</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://hub-mirror.c.163.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="测试运行-hello-world" tabindex="-1">测试运行 hello-world <a class="header-anchor" href="#测试运行-hello-world" aria-label="Permalink to &quot;测试运行 hello-world&quot;">​</a></h3><h2 id="警告" tabindex="-1">警告 <a class="header-anchor" href="#警告" aria-label="Permalink to &quot;警告&quot;">​</a></h2><p>WARNING: IPv4 forwarding is disabled. Networking will not work.</p><blockquote><p>vi /etc/sysctl.conf</p></blockquote><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">net</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ipv4</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ip_forward </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><blockquote><p>重启 network 服务 systemctl restart network</p></blockquote><blockquote><p>查看是否修改成功 sysctl net.ipv4.ip_forward</p></blockquote><blockquote><p>成功返回 net.ipv4.ip_forward = 1</p></blockquote><h2 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h2><h3 id="查看容器是否在运行" tabindex="-1">查看容器是否在运行 <a class="header-anchor" href="#查看容器是否在运行" aria-label="Permalink to &quot;查看容器是否在运行&quot;">​</a></h3><blockquote><p>docker ps</p></blockquote><h3 id="在-ubuntu-15-10-的镜像下用-bin-echo-输出-hello-world-如果不存在镜像-先下载再运行" tabindex="-1">在 ubuntu:15.10 的镜像下用 /bin/echo 输出 &quot;Hello world&quot; 如果不存在镜像，先下载再运行 <a class="header-anchor" href="#在-ubuntu-15-10-的镜像下用-bin-echo-输出-hello-world-如果不存在镜像-先下载再运行" aria-label="Permalink to &quot;在 ubuntu:15.10 的镜像下用 /bin/echo 输出 &quot;Hello world&quot; 如果不存在镜像，先下载再运行&quot;">​</a></h3><blockquote><p>docker run ubuntu:15.10 /bin/echo &quot;Hello world&quot;</p></blockquote><h3 id="docker-run-i-t-ubuntu-15-10-bin-bash" tabindex="-1">docker run -i -t ubuntu:15.10 /bin/bash <a class="header-anchor" href="#docker-run-i-t-ubuntu-15-10-bin-bash" aria-label="Permalink to &quot;docker run -i -t ubuntu:15.10 /bin/bash&quot;">​</a></h3><ul><li>t:在新容器内指定一个伪终端或终端。</li><li>i:允许你对容器内的标准输入(STDIN) 进行交互。</li></ul><p>ctrl+D 退出新容器创建的终端</p><h3 id="在容器内使用-docker-logs-命令-查看容器内的标准输出" tabindex="-1">在容器内使用 docker logs 命令，查看容器内的标准输出 <a class="header-anchor" href="#在容器内使用-docker-logs-命令-查看容器内的标准输出" aria-label="Permalink to &quot;在容器内使用 docker logs 命令，查看容器内的标准输出&quot;">​</a></h3><blockquote><p>docker ps</p></blockquote><table><thead><tr><th>CONTAINER ID</th><th style="text-align:right;">IMAGE</th><th style="text-align:right;">COMMAND</th><th style="text-align:right;">CREATED</th><th style="text-align:right;">STATUS</th><th style="text-align:right;">PORTS</th><th style="text-align:right;">NAMES</th></tr></thead><tbody><tr><td>22e838e0b7a9</td><td style="text-align:right;">ubuntu:15.10</td><td style="text-align:right;">&quot;/bin/sh -c &#39;while...&quot;</td><td style="text-align:right;">8 minutes ago</td><td style="text-align:right;">Up 8 minutes</td><td style="text-align:right;"></td><td style="text-align:right;">sharp_darwin</td></tr></tbody></table><p>通过 CONTAINER ID 或者 NAMES 查看运行日志</p><blockquote><p>docker logs 22e838e0b7a9</p></blockquote><blockquote><p>docker logs sharp_darwin</p></blockquote><h3 id="停止容器" tabindex="-1">停止容器 <a class="header-anchor" href="#停止容器" aria-label="Permalink to &quot;停止容器&quot;">​</a></h3><blockquote><p>docker stop 22e838e0b7a9</p></blockquote><blockquote><p>docker stop sharp_darwin</p></blockquote><h2 id="创建一个-node-web-服务" tabindex="-1">创建一个 node web 服务 <a class="header-anchor" href="#创建一个-node-web-服务" aria-label="Permalink to &quot;创建一个 node web 服务&quot;">​</a></h2><h3 id="拉取-node-镜像" tabindex="-1">拉取 node 镜像 <a class="header-anchor" href="#拉取-node-镜像" aria-label="Permalink to &quot;拉取 node 镜像&quot;">​</a></h3><blockquote><p>docker pull node</p></blockquote><h3 id="查看镜像是否下载" tabindex="-1">查看镜像是否下载 <a class="header-anchor" href="#查看镜像是否下载" aria-label="Permalink to &quot;查看镜像是否下载&quot;">​</a></h3><blockquote><p>docker image</p></blockquote><h3 id="创建-package-json" tabindex="-1">创建 package.json <a class="header-anchor" href="#创建-package-json" aria-label="Permalink to &quot;创建 package.json&quot;">​</a></h3><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">app.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">echo </span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">Error: no test specified</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;"> &amp;&amp; exit 1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">keywords</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[],</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">author</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">license</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ISC</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">dependencies</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">express</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^4.16.3</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="dockerfile" tabindex="-1">Dockerfile <a class="header-anchor" href="#dockerfile" aria-label="Permalink to &quot;Dockerfile&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">FROM </span><span style="color:#FFCB6B;">node</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">8.9</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">alpine</span></span>
<span class="line"><span style="color:#A6ACCD;">ENV NODE_ENV production</span></span>
<span class="line"><span style="color:#A6ACCD;">WORKDIR </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">usr</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">src</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">app</span></span>
<span class="line"><span style="color:#A6ACCD;">COPY [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">package.json</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">package-lock.json*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npm-shrinkwrap.json*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">RUN npm install </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">production </span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">silent </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> mv node_modules </span><span style="color:#89DDFF;">../</span></span>
<span class="line"><span style="color:#A6ACCD;">COPY </span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">EXPOSE </span><span style="color:#F78C6C;">3000</span></span>
<span class="line"><span style="color:#A6ACCD;">CMD npm start</span></span>
<span class="line"></span></code></pre></div><h3 id="app-js" tabindex="-1">app.js <a class="header-anchor" href="#app-js" aria-label="Permalink to &quot;app.js&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">use strict</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> express </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">express</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> PORT </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">express</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">req</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello Docker</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen</span><span style="color:#A6ACCD;">(PORT)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Running on http://localhost:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> PORT)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="建一个文件夹" tabindex="-1">建一个文件夹 <a class="header-anchor" href="#建一个文件夹" aria-label="Permalink to &quot;建一个文件夹&quot;">​</a></h3><blockquote><p>mkdir app</p></blockquote><blockquote><p>cd app</p></blockquote><blockquote><p>把所有文件放到里面</p></blockquote><h3 id="当前文件夹执行下列命令" tabindex="-1">当前文件夹执行下列命令 <a class="header-anchor" href="#当前文件夹执行下列命令" aria-label="Permalink to &quot;当前文件夹执行下列命令&quot;">​</a></h3><blockquote><p>docker build -t mynodeapp . 创建 image</p></blockquote><blockquote><p>docker image 查看我们创建的镜像</p></blockquote><h3 id="运行镜像" tabindex="-1">运行镜像 <a class="header-anchor" href="#运行镜像" aria-label="Permalink to &quot;运行镜像&quot;">​</a></h3><blockquote><p>docker run -d -p 3000:3000 297513a264fd</p></blockquote><ul><li>-d 容器会在后台运行</li><li>-p 表示端口映射，把本机的 3000 映射到容器的 3000 端口这样外网就能通过本机的 3000 访问我们的 web 了</li><li>297513a264fd 我们的 image id</li></ul><h3 id="可以访问成功" tabindex="-1">可以访问成功 <a class="header-anchor" href="#可以访问成功" aria-label="Permalink to &quot;可以访问成功&quot;">​</a></h3><p>-_-开心</p>`,57),e=[p];function t(r,c,D,i,y,F){return o(),a("div",null,e)}const d=s(l,[["render",t]]);export{C as __pageData,d as default};
